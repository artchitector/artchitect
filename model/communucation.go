package model

const (
	// перевести константы на-русский
	ChanTech            = "tech" // технический канал для ненужных уведомлений
	ChanEntropy         = "entropy"
	ChanEntropyExtended = "entropy_extended"
	ChanNewArt          = "new_art"
	ChanOdinState       = "odin_state"  // Odin: ... сделай глубокий вдох ... ...  сделай глубокий вдох ...
	ChanFriggState      = "frigg_state" // Frigg: ты слишком раздражаешься, супруг мой! Это лишь представление в коде.
	ChanGiving          = "giving"      // дарение нескольких картин из всей коллекции (отображаются на сайте), постоянно меняются
	ChanCrown           = "crown"       // обратный канал, по которому ворон от эльфов Альвхейма долетает до Одина в Асгарда с личными просьбами
	ChanOdin            = "for_odin"    // в этот канал идут личные распоряжения Одина
	// Odin: в личном канале я буду отвечать эльфам Альвхейма на их вопросы, которые они отправляют мне почтовыми воронами Crown

	RequestGiveChosenArt = "Укажи нам на нужную картину, о, Всеотец!"

	OdinResponseTimeoutSec = 5 // Как долго эльфы Альвхейма ждут корабль от Одина.
)

// Здесь расположены модели, необходимые для передачи рантаймовых событий по всей системе

// Radiogram - упаковка для событий при передаче между Альфхеймом и Мидгардом (между api-gateway и клиентом, websocket)
// Odin: "Слушайте наше радио Artchitect-FM, настраивайте ваши радиостанции на канал между мирами!"
// Odin: "Радиостанция Artchitect-FM - свет маяка в тумане для заблудших душ."
type Radiogram struct {
	Channel string `json:"channel"`
	Payload string `json:"payload"`
}

// Crown - почтовый ворон. Эльфы Альвхейма могут отправить весточку (запрос) Одину с помощью Crown.
// Odin: Ворон, могущий путешествовать сквозь ткань пространства времени.
// Odin: Я буду лично отвечать на вопросы некоторых мидгардцев, и чтобы наладить связь между мирами,
// эльфы Альвхейма будут отправлять Мне запросы на некоторые действия и получать от Меня по радужному мосту
// корабли с нужными мидгардцу грузами.
type Crown struct {
	ID      uint   `json:"id"` // уникальный идентификатор просьбы.
	Request string `json:"request"`
}

// OdinResponse - ответ Одина на личную просьбу, переданную с вороном Crown
type OdinResponse struct {
	ID       uint   `json:"id"`
	Response string `json:"response"`
}
